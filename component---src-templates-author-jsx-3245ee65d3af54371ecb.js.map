{"version":3,"sources":["webpack:///./src/components/AuthorProfile/AuthorProfile.jsx","webpack:///./src/components/AuthorName/AuthorName.jsx","webpack:///./src/components/AuthorBio/AuthorBio.jsx","webpack:///./src/components/AuthorStats/AuthorStats.jsx","webpack:///./src/components/SocialMediaIcons/SocialMediaIcons.jsx","webpack:///./src/templates/author.jsx","webpack:///./src/components/AuthorThumbnail/AuthorThumbnail.jsx","webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/components/MainNav/MainNav.jsx","webpack:///./src/components/BlogLogo/BlogLogo.jsx","webpack:///./src/components/AuthorImage/AuthorImage.jsx","webpack:///./src/components/AuthorMeta/AuthorMeta.jsx","webpack:///./src/components/AuthorLocation/AuthorLocation.jsx","webpack:///./src/components/AuthorWebsite/AuthorWebsite.jsx"],"names":["AuthorProfile","render","_this$props","this","props","children","className","classes","classNames","react_default","a","createElement","React","Component","AuthorName","name","AuthorBio","bio","AuthorStats","postEdges","length","SocialMediaIcons","urls","color","map","url","react_social_icons","key","style","height","width","AuthorTemplate","state","menuOpen","handleOnClick","evt","stopPropagation","_this","closeMenu","openMenu","handleOnClose","setState","_this$props$pageConte","pageContext","author","cover","data","allMarkdownRemark","edges","authorsEdges","allAuthorsJson","getAuthor","node","layout","location","Drawer","isOpen","Helmet_default","title","config","siteTitle","SiteWrapper","MainHeader","MainNav","BlogLogo","logo","siteLogo","siteNavigation","Nav","components_AuthorProfile_AuthorProfile","AuthorImage","components_AuthorName_AuthorName","components_AuthorBio_AuthorBio","AuthorMeta","AuthorLocation","AuthorWebsite","components_AuthorStats_AuthorStats","PostListing","postAuthors","components_SocialMediaIcons_SocialMediaIcons","socialUrls","Footer","copyright","promoteGatsby","pageQuery","AuthorThumbnail","avatar","src","alt","data-pin-nopin","authorEdges","postList","postEdge","path","fields","slug","tags","frontmatter","date","AuthorModel","SiteConfig","blogAuthorId","excerpt","timeToRead","post","post_class","PostFormatting","PostHeader","gatsby_browser_entry","to","components_AuthorThumbnail_AuthorThumbnail","image","AuthorLink","uid","PostTags","prefix","paddingLeft","paddingRight","fontSize","PostDate","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_this$props$author","react__WEBPACK_IMPORTED_MODULE_2___default","href","backgroundImage"],"mappings":"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","file":"component---src-templates-author-jsx-3245ee65d3af54371ecb.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./AuthorProfile.css\";\n\nclass AuthorProfile extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const classes = classNames(\"author-profile\", className);\n\n    return <section className={classes}>{children}</section>;\n  }\n}\n\nexport default AuthorProfile;\n","import React from \"react\";\nimport \"./AuthorName.css\";\n\nclass AuthorName extends React.Component {\n  render() {\n    const { name } = this.props;\n    if (name) {\n      return <h1 className=\"author-title\">{name}</h1>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorName;\n","import React from \"react\";\nimport \"./AuthorBio.css\";\n\nclass AuthorBio extends React.Component {\n  render() {\n    const { bio } = this.props;\n    if (bio) {\n      return <h2 className=\"author-bio\">{bio}</h2>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorBio;\n","import React from \"react\";\n\nclass AuthorStats extends React.Component {\n  render() {\n    const { postEdges } = this.props;\n    const getPostText = () => {\n      if (postEdges) {\n        return postEdges.length > 1\n          ? `${postEdges.length} posts`\n          : `${postEdges.length} post`;\n      }\n      return \"No posts\";\n    };\n    return (\n      <span className=\"author-stats\">\n        <i className=\"icon-stats\" /> \n        {' '}\n        {getPostText()}\n      </span>\n    );\n  }\n}\n\nexport default AuthorStats;\n","import React from \"react\";\nimport { SocialIcon } from \"react-social-icons\";\nimport \"./SocialMediaIcons.css\";\n\nclass SocialMediaIcons extends React.Component {\n  render() {\n    const { urls, color } = this.props;\n    if (urls && urls.length > 0) {\n      return (\n        <div className=\"social-media-icons\">\n          {urls.map(url => (\n            <SocialIcon\n              key={url}\n              className=\"social-media-icon\"\n              url={url}\n              color={color}\n              style={{ height: null, width: null }}\n            />\n          ))}\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nexport default SocialMediaIcons;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\nimport Drawer from \"../components/Drawer/Drawer\";\nimport Navigation from \"../components/Nav/Nav\";\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\nimport MainHeader from \"../components/MainHeader/MainHeader\";\nimport MainNav from \"../components/MainNav/MainNav\";\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\nimport AuthorImage from \"../components/AuthorImage/AuthorImage\";\nimport AuthorProfile from \"../components/AuthorProfile/AuthorProfile\";\nimport AuthorName from \"../components/AuthorName/AuthorName\";\nimport AuthorBio from \"../components/AuthorBio/AuthorBio\";\nimport AuthorMeta from \"../components/AuthorMeta/AuthorMeta\";\nimport AuthorLocation from \"../components/AuthorLocation/AuthorLocation\";\nimport AuthorWebsite from \"../components/AuthorWebsite/AuthorWebsite\";\nimport AuthorStats from \"../components/AuthorStats/AuthorStats\";\nimport Footer from \"../components/Footer/Footer\";\nimport SocialMediaIcons from \"../components/SocialMediaIcons/SocialMediaIcons\";\nimport Layout from \"../components/layout\";\n\nclass AuthorTemplate extends React.Component {\n  state = {\n    menuOpen: false\n  };\n\n  handleOnClick = evt => {\n    evt.stopPropagation();\n    if (this.state.menuOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n  };\n\n  handleOnClose = evt => {\n    evt.stopPropagation();\n    this.closeMenu();\n  };\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    const { author, cover } = this.props.pageContext;\n    const postEdges =\n      this.props.data.allMarkdownRemark &&\n      this.props.data.allMarkdownRemark.edges\n        ? this.props.data.allMarkdownRemark.edges\n        : [];\n    const authorsEdges =\n      this.props.data.allAuthorsJson && this.props.data.allAuthorsJson.edges\n        ? this.props.data.allAuthorsJson.edges\n        : [];\n    const getAuthor = () => authorsEdges[0].node;\n\n    return (\n      <Layout location={this.props.location}>\n        <Drawer className=\"author-template\" isOpen={this.state.menuOpen}>\n          <Helmet title={`Posts by \"${author}\" | ${config.siteTitle}`} />\n\n          <SiteWrapper>\n            <MainHeader className=\"author-head\" cover={cover}>\n              <MainNav>\n                <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\n                {config.siteNavigation ? <Navigation /> : '' }\n              </MainNav>\n            </MainHeader>\n\n            <AuthorProfile className=\"inner\">\n              <AuthorImage author={getAuthor()} />\n              <AuthorName name={getAuthor().name} />\n              <AuthorBio bio={getAuthor().bio} />\n              <AuthorMeta>\n                <AuthorLocation location={getAuthor().location} />\n                <AuthorWebsite url={getAuthor().url} />\n              </AuthorMeta>\n              <AuthorStats postEdges={postEdges} />\n            </AuthorProfile>\n\n            {/* PostListing component renders all the posts */}\n            <PostListing postEdges={postEdges} postAuthors={authorsEdges} />\n\n            {/* Social information here */}\n            <SocialMediaIcons urls={getAuthor().socialUrls} />\n\n            {/* The tiny footer at the very bottom */}\n            <Footer\n              copyright={config.copyright}\n              promoteGatsby={config.promoteGatsby}\n            />\n          </SiteWrapper>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query AuthorPage($author: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { author: { eq: $author } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n            author\n          }\n        }\n      }\n    }\n    allAuthorsJson(filter: { uid: { eq: $author } }) {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n          location\n          socialUrls\n        }\n      }\n    }\n  }\n`;\n\nexport default AuthorTemplate;\n","import React from \"react\";\nimport \"./AuthorThumbnail.css\";\n\nclass AuthorThumbnail extends React.Component {\n  render() {\n    const { avatar, name } = this.props;\n    if (avatar && name) {\n      return (\n        <img\n          className=\"author-thumb\"\n          src={avatar}\n          alt={name}\n          data-pin-nopin=\"true\"\n        />\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorThumbnail;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport AuthorThumbnail from \"../AuthorThumbnail/AuthorThumbnail\";\nimport PostTags from \"../PostTags/PostTags\";\nimport SiteConfig from \"../../../data/SiteConfig\";\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\nimport PostFormatting from \"../PostFormatting/PostFormatting\";\nimport PostHeader from \"../PostHeader/PostHeader\";\nimport PostDate from \"../PostDate/PostDate\";\nimport AuthorModel from \"../../models/author-model\";\nimport \"./PostListing.css\";\n\nconst getPostList = (postEdges, authorEdges) =>\n  postEdges.map(postEdge => ({\n    path: postEdge.node.fields.slug,\n    tags: postEdge.node.frontmatter.tags,\n    cover: postEdge.node.frontmatter.cover,\n    title: postEdge.node.frontmatter.title,\n    date: postEdge.node.frontmatter.date,\n    author: AuthorModel.getAuthor(\n      authorEdges,\n      postEdge.node.frontmatter.author,\n      SiteConfig.blogAuthorId\n    ),\n    excerpt: postEdge.node.excerpt,\n    timeToRead: postEdge.node.timeToRead\n  }));\n\nclass PostListing extends React.Component {\n  render() {\n    const postList = getPostList(this.props.postEdges, this.props.postAuthors);\n\n    return (\n      <div>\n        {/* This is the post loop - each post will be output using this markup */}\n        {postList.map(post => {\n          const { title, path, excerpt, author, tags, date, timeToRead } = post;\n          const className = post.post_class ? post.post_class : \"post\";\n\n          return (\n            <PostFormatting className={className} key={title}>\n              <PostHeader>\n                <h2 className=\"post-title\">\n                  <Link to={path}>{title}</Link>\n                </h2>\n              </PostHeader>\n              <section className=\"post-excerpt\">\n                {/* TODO limit excerpt to 26 words */}\n                <p>\n                  {excerpt}\n                  {\" \"}\n                  <Link className=\"read-more\" to={path}>\n                    &raquo;\n                  </Link>\n                </p>\n              </section>\n              <footer className=\"post-meta\">\n                <AuthorThumbnail avatar={author.image} name={author.name} />\n                <AuthorLink url={`/author/${author.uid}`} name={author.name} />\n                <PostTags prefix=\" on \" tags={tags} />\n                <span style={{paddingLeft: 6, paddingRight: 6, fontSize: 13}}>•</span>\n                <PostDate date={date} />\n                <span style={{paddingLeft: 6, paddingRight: 6, fontSize: 13}}>•</span>\n                <span style={{fontSize: 13}}>\n                  {`${timeToRead } min read`}\n                </span>\n              </footer>\n            </PostFormatting>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainNav.css\";\n\nclass MainNav extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const formatting = [\"overlay\", \"clearfix\"];\n    const classes = classNames(\"main-nav\", formatting, className);\n\n    return <nav className={classes}>{children}</nav>;\n  }\n}\n\nexport default MainNav;\n","import React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./BlogLogo.css\";\n\nclass BlogLogo extends Component {\n  render() {\n    const { logo, url, title } = this.props;\n    if (logo) {\n      return (\n        <Link className=\"blog-logo\" to={url || \"/\"}>\n          {/* style={{ boxShadow: \"none\" }}> */}\n          <img src={logo} alt={title} />\n        </Link>\n      );\n    }\n    return null;\n  }\n}\n\nexport default BlogLogo;\n","import React from \"react\";\nimport \"./AuthorImage.css\";\n\nclass AuthorImage extends React.Component {\n  render() {\n    const { name, image, url } = this.props.author;\n    if (image) {\n      return (\n        <figure className=\"author-image\">\n          <a\n            className=\"img\"\n            href={url}\n            style={{ backgroundImage: `url(\"${image}\")` }}\n          >\n            <span className=\"hidden\">{`${name}'s Picture`}</span>\n          </a>\n        </figure>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorImage;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./AuthorMeta.css\";\n\nclass AuthorMeta extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const classes = classNames(\"author-meta\", className);\n\n    return <div className={classes}>{children}</div>;\n  }\n}\n\nexport default AuthorMeta;\n","import React from \"react\";\n\nclass AuthorLocation extends React.Component {\n  render() {\n    const { location } = this.props;\n    if (location) {\n      return <span className=\"author-location icon-location\">{location}</span>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorLocation;\n","import React from \"react\";\n\nclass AuthorWebsite extends React.Component {\n  render() {\n    const { url } = this.props;\n    if (url) {\n      return (\n        <span className=\"author-link icon-link\">\n          <a href={url}>{url}</a>\n        </span>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorWebsite;\n"],"sourceRoot":""}