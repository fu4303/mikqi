{"version":3,"sources":["webpack:///./src/components/BlogHomeLogo/BlogHomeLogo.jsx","webpack:///./src/templates/index.jsx","webpack:///./src/components/AuthorThumbnail/AuthorThumbnail.jsx","webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/components/MainContent/MainContent.jsx","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/PageTitle/PageTitle.jsx","webpack:///./src/components/PageDescription/PageDescription.jsx","webpack:///./src/components/PaginationLink/PaginationLink.jsx","webpack:///./src/components/Pagination/Pagination.jsx","webpack:///./src/components/PaginatedContent/PaginatedContent.jsx"],"names":["BlogLogo","render","_this$props","this","props","logo","url","title","react_default","a","createElement","gatsby_browser_entry","className","to","src","alt","Component","IndexTemplate","state","menuOpen","handleOnClick","evt","stopPropagation","_this","closeMenu","openMenu","handleOnClose","setState","_this$props$pageConte","pageContext","nodes","page","pages","total","limit","prev","next","authorsEdges","data","authors","edges","layout","location","Drawer","isOpen","Helmet_default","config","siteTitle","SEO","postEdges","SiteWrapper","MainHeader","cover","siteCover","siteNavigation","Nav","BlogHomeLogo_BlogHomeLogo","siteLogo","style","float","PageTitle","text","PageDescription","siteTitleAlt","modules","data-offset","spy","smooth","duration","PaginatedContent","PostListing","postAuthors","Footer","copyright","promoteGatsby","React","pageQuery","AuthorThumbnail","avatar","name","data-pin-nopin","authorEdges","postList","map","postEdge","path","node","fields","slug","tags","frontmatter","date","author","AuthorModel","getAuthor","SiteConfig","blogAuthorId","excerpt","timeToRead","post","post_class","PostFormatting","key","PostHeader","components_AuthorThumbnail_AuthorThumbnail","image","AuthorLink","uid","PostTags","prefix","paddingLeft","paddingRight","fontSize","PostDate","MainContent","children","classes","classNames","react__WEBPACK_IMPORTED_MODULE_1___default","id","role","description","postURL","postNode","postPath","postSEO","postMeta","siteUrl","pathPrefix","siteDescription","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","alternateName","push","itemListElement","position","item","@id","headline","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","content","type","JSON","stringify","property","siteFBAppID","userTwitter","PaginationLink","rest","Object","assign","Pagination","components_PaginationLink_PaginationLink","components_Pagination_Pagination"],"mappings":"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","file":"component---src-templates-index-jsx-220871f7c5af84e08967.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./BlogHomeLogo.css\";\n\nclass BlogLogo extends Component {\n  render() {\n    const { logo, url, title } = this.props;\n    if (logo) {\n      return (\n        <Link className=\"blog-home-logo\" to={url || \"/\"}>\n          {/* style={{ boxShadow: \"none\" }}> */}\n          <img src={logo} alt={title} />\n        </Link>\n      );\n    }\n    return null;\n  }\n}\n\nexport default BlogLogo;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Link } from \"react-scroll\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport Drawer from \"../components/Drawer/Drawer\";\nimport Navigation from \"../components/Nav/Nav\"\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\nimport Footer from \"../components/Footer/Footer\";\nimport MainHeader from \"../components/MainHeader/MainHeader\";\nimport BlogHomeLogo from \"../components/BlogHomeLogo/BlogHomeLogo\";\nimport PageTitle from \"../components/PageTitle/PageTitle\";\nimport PageDescription from \"../components/PageDescription/PageDescription\";\nimport PaginatedContent from \"../components/PaginatedContent/PaginatedContent\";\nimport Layout from \"../components/layout\";\n\nclass IndexTemplate extends React.Component {\n  state = {\n    menuOpen: false\n  };\n\n  handleOnClick = evt => {\n    evt.stopPropagation();\n    if (this.state.menuOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n  };\n\n  handleOnClose = evt => {\n    evt.stopPropagation();\n    this.closeMenu();\n  };\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    const {\n      nodes,\n      page,\n      pages,\n      total,\n      limit,\n      prev,\n      next\n    } = this.props.pageContext;\n    const authorsEdges = this.props.data.authors.edges;\n\n    return (\n      <Layout location={this.props.location}>\n        <Drawer className=\"home-template\" isOpen={this.state.menuOpen}>\n          <Helmet title={config.siteTitle} />\n          <SEO postEdges={nodes} />\n\n          <SiteWrapper>\n            {/* All the main content gets inserted here */}\n            <div className=\"home-template\">\n              {/* The big featured header */}\n              <MainHeader cover={config.siteCover}>\n                <div className=\"vertical\">\n                  <div className=\"main-header-content inner\">\n                    {config.siteNavigation ? <Navigation /> : '' }\n                    <BlogHomeLogo logo={config.siteLogo} style={{float: 'none'}} title={config.siteTitle} />\n\n                    <PageTitle text={config.siteTitle} />\n                    <PageDescription text={config.siteTitleAlt} />\n                  </div>\n                </div>\n                <Link\n                  className=\"scroll-down icon-arrow-left\"\n                  to=\"content\"\n                  data-offset=\"-45\"\n                  spy\n                  smooth\n                  duration={500}\n                >\n                  <span className=\"hidden\">Scroll Down</span>\n                </Link>\n              </MainHeader>\n\n              <PaginatedContent\n                page={page}\n                pages={pages}\n                total={total}\n                limit={limit}\n                prev={prev}\n                next={next}\n              >\n                {/* PostListing component renders all the posts */}\n                <PostListing postEdges={nodes} postAuthors={authorsEdges} />\n              </PaginatedContent>\n            </div>\n\n            {/* The tiny footer at the very bottom */}\n            <Footer\n              copyright={config.copyright}\n              promoteGatsby={config.promoteGatsby}\n            />\n          </SiteWrapper>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query IndexQuery {\n    # posts data comes from the context\n    # authors\n    authors: allAuthorsJson {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexTemplate;\n","import React from \"react\";\nimport \"./AuthorThumbnail.css\";\n\nclass AuthorThumbnail extends React.Component {\n  render() {\n    const { avatar, name } = this.props;\n    if (avatar && name) {\n      return (\n        <img\n          className=\"author-thumb\"\n          src={avatar}\n          alt={name}\n          data-pin-nopin=\"true\"\n        />\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorThumbnail;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport AuthorThumbnail from \"../AuthorThumbnail/AuthorThumbnail\";\nimport PostTags from \"../PostTags/PostTags\";\nimport SiteConfig from \"../../../data/SiteConfig\";\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\nimport PostFormatting from \"../PostFormatting/PostFormatting\";\nimport PostHeader from \"../PostHeader/PostHeader\";\nimport PostDate from \"../PostDate/PostDate\";\nimport AuthorModel from \"../../models/author-model\";\nimport \"./PostListing.css\";\n\nconst getPostList = (postEdges, authorEdges) =>\n  postEdges.map(postEdge => ({\n    path: postEdge.node.fields.slug,\n    tags: postEdge.node.frontmatter.tags,\n    cover: postEdge.node.frontmatter.cover,\n    title: postEdge.node.frontmatter.title,\n    date: postEdge.node.frontmatter.date,\n    author: AuthorModel.getAuthor(\n      authorEdges,\n      postEdge.node.frontmatter.author,\n      SiteConfig.blogAuthorId\n    ),\n    excerpt: postEdge.node.excerpt,\n    timeToRead: postEdge.node.timeToRead\n  }));\n\nclass PostListing extends React.Component {\n  render() {\n    const postList = getPostList(this.props.postEdges, this.props.postAuthors);\n\n    return (\n      <div>\n        {/* This is the post loop - each post will be output using this markup */}\n        {postList.map(post => {\n          const { title, path, excerpt, author, tags, date, timeToRead } = post;\n          const className = post.post_class ? post.post_class : \"post\";\n\n          return (\n            <PostFormatting className={className} key={title}>\n              <PostHeader>\n                <h2 className=\"post-title\">\n                  <Link to={path}>{title}</Link>\n                </h2>\n              </PostHeader>\n              <section className=\"post-excerpt\">\n                {/* TODO limit excerpt to 26 words */}\n                <p>\n                  {excerpt}\n                  {\" \"}\n                  <Link className=\"read-more\" to={path}>\n                    &raquo;\n                  </Link>\n                </p>\n              </section>\n              <footer className=\"post-meta\">\n                <AuthorThumbnail avatar={author.image} name={author.name} />\n                <AuthorLink url={`/author/${author.uid}`} name={author.name} />\n                <PostTags prefix=\" on \" tags={tags} />\n                <span style={{paddingLeft: 6, paddingRight: 6, fontSize: 13}}>•</span>\n                <PostDate date={date} />\n                <span style={{paddingLeft: 6, paddingRight: 6, fontSize: 13}}>•</span>\n                <span style={{fontSize: 13}}>\n                  {`${timeToRead } min read`}\n                </span>\n              </footer>\n            </PostFormatting>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainContent.css\";\n\nclass MainContent extends React.Component {\n  render() {\n    const { children } = this.props;\n\n    const classes = classNames(\"content\", this.props.className);\n\n    return (\n      <main id=\"content\" className={classes} role=\"main\">\n        {children}\n      </main>\n    );\n  }\n}\n\nexport default MainContent;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      // eslint-disable-next-line prefer-destructuring\n      title = postMeta.title;\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = config.siteUrl + config.pathPrefix + postPath;\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    const realPrefix = config.pathPrefix === \"/\" ? \"\" : config.pathPrefix;\n    image = config.siteUrl + realPrefix + image;\n    const blogURL = config.siteUrl + config.pathPrefix;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React from \"react\";\nimport \"./PageTitle.css\";\n\nclass PageTitle extends React.Component {\n  render() {\n    const { text } = this.props;\n    if (text) {\n      return <h1 className=\"page-title\">{text}</h1>;\n    }\n    return null;\n  }\n}\n\nexport default PageTitle;\n","import React from \"react\";\nimport \"./PageDescription.css\";\n\nclass PageDescription extends React.Component {\n  render() {\n    const { text } = this.props;\n    if (text) {\n      return <h2 className=\"page-description\">{text}</h2>;\n    }\n    return null;\n  }\n}\n\nexport default PageDescription;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./PaginationLink.css\";\n\nclass PaginationLink extends React.Component {\n  render() {\n    if (this.props.url) {\n      let className = \"nav-link\";\n      if (this.props.className) {\n        className = `${className} ${this.props.className}`;\n      }\n\n      // Clone this.props and then delete Component specific\n      // props so we can spread the rest into the img.\n      const { ...rest } = this.props;\n      delete rest.style;\n      delete rest.className;\n      delete rest.text;\n      delete rest.url;\n\n      return (\n        <Link to={this.props.url} {...rest} className={className}>\n          {this.props.text}\n        </Link>\n      );\n    }\n    return null;\n  }\n}\n\nexport default PaginationLink;\n","import React from \"react\";\nimport PaginationLink from \"../PaginationLink/PaginationLink\";\nimport \"./Pagination.css\";\n\nclass Pagination extends React.Component {\n  render() {\n    const { page, pages, prev, next } = this.props;\n    return (\n      <nav className=\"pagination\">\n        <PaginationLink\n          className=\"newer-posts\"\n          url={prev}\n          text=\"← Newer Posts\"\n        />\n        <span className=\"page-number\">\n          Page \n          {' '}\n          {page}\n          {' '}\nof\n          {' '}\n          {pages}\n        </span>\n        <PaginationLink\n          className=\"older-posts\"\n          url={next}\n          text=\"Older Posts →\"\n        />\n      </nav>\n    );\n  }\n}\n\nexport default Pagination;\n","import React from \"react\";\nimport MainContent from \"../MainContent/MainContent\";\nimport Pagination from \"../Pagination/Pagination\";\nimport \"./PaginatedContent.css\";\n\nclass PaginatedContent extends React.Component {\n  render() {\n    const { page, pages, prev, next, children } = this.props;\n    let className = \"\";\n    if (page > 1) {\n      className = `${className} paged`;\n    }\n    return (\n      <MainContent className={className}>\n        {/* Previous/next page links - only displayed on page 2+ */}\n        <div className=\"extra-pagination inner\">\n          <Pagination page={page} pages={pages} prev={prev} next={next} />\n        </div>\n\n        {children}\n\n        {/* Previous/next page links - displayed on every page */}\n        <Pagination page={page} pages={pages} prev={prev} next={next} />\n      </MainContent>\n    );\n  }\n}\n\nexport default PaginatedContent;\n"],"sourceRoot":""}