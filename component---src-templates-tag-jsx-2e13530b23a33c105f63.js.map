{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./src/components/AuthorThumbnail/AuthorThumbnail.jsx","webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/components/MainContent/MainContent.jsx","webpack:///./src/components/MainNav/MainNav.jsx","webpack:///./src/components/BlogLogo/BlogLogo.jsx","webpack:///./src/components/PageTitle/PageTitle.jsx","webpack:///./src/components/PageDescription/PageDescription.jsx","webpack:///./src/components/PaginationLink/PaginationLink.jsx","webpack:///./src/components/Pagination/Pagination.jsx","webpack:///./src/components/PaginatedContent/PaginatedContent.jsx"],"names":["TagTemplate","state","menuOpen","handleOnClick","evt","stopPropagation","_this","closeMenu","openMenu","handleOnClose","setState","render","_this$props$pageConte","this","props","pageContext","tag","nodes","page","pages","total","limit","prev","next","authorsEdges","data","authors","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_15__","location","_components_Drawer_Drawer__WEBPACK_IMPORTED_MODULE_5__","isOpen","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_SiteWrapper_SiteWrapper__WEBPACK_IMPORTED_MODULE_7__","className","_components_MainHeader_MainHeader__WEBPACK_IMPORTED_MODULE_8__","cover","featureImage","_components_MainNav_MainNav__WEBPACK_IMPORTED_MODULE_9__","_components_BlogLogo_BlogLogo__WEBPACK_IMPORTED_MODULE_10__","logo","siteLogo","siteNavigation","_components_Nav_Nav__WEBPACK_IMPORTED_MODULE_6__","_components_PageTitle_PageTitle__WEBPACK_IMPORTED_MODULE_11__","text","_components_PageDescription_PageDescription__WEBPACK_IMPORTED_MODULE_12__","description","_components_PaginatedContent_PaginatedContent__WEBPACK_IMPORTED_MODULE_14__","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_3__","postEdges","postAuthors","_components_Footer_Footer__WEBPACK_IMPORTED_MODULE_13__","copyright","promoteGatsby","React","Component","pageQuery","AuthorThumbnail","_this$props","avatar","name","react_default","src","alt","data-pin-nopin","PostListing","authorEdges","postList","map","postEdge","path","node","fields","slug","tags","frontmatter","date","author","AuthorModel","getAuthor","SiteConfig","blogAuthorId","excerpt","timeToRead","post","post_class","PostFormatting","key","PostHeader","gatsby_browser_entry","to","components_AuthorThumbnail_AuthorThumbnail","image","AuthorLink","url","uid","PostTags","prefix","style","paddingLeft","paddingRight","fontSize","PostDate","MainContent","children","classes","classNames","id","role","MainNav","BlogLogo","gatsby__WEBPACK_IMPORTED_MODULE_2__","PageTitle","PageDescription","PaginationLink","rest","Object","assign","Pagination","components_PaginationLink_PaginationLink","PaginatedContent","components_Pagination_Pagination"],"mappings":"2TAiBMA,sJACJC,MAAQ,CACNC,UAAU,KAGZC,cAAgB,SAAAC,GACdA,EAAIC,kBACAC,EAAKL,MAAMC,SACbI,EAAKC,YAELD,EAAKE,cAITC,cAAgB,SAAAL,GACdA,EAAIC,kBACJC,EAAKC,eAGPC,SAAW,WACTF,EAAKI,SAAS,CAAER,UAAU,OAG5BK,UAAY,WACVD,EAAKI,SAAS,CAAER,UAAU,mCAG5BS,kBAAS,IAAAC,EAUHC,KAAKC,MAAMC,YARbC,EAFKJ,EAELI,IACAC,EAHKL,EAGLK,MACAC,EAJKN,EAILM,KACAC,EALKP,EAKLO,MACAC,EANKR,EAMLQ,MACAC,EAPKT,EAOLS,MACAC,EARKV,EAQLU,KACAC,EATKX,EASLW,KAEIC,EAAeX,KAAKC,MAAMW,KAAKC,QAAQC,MAC7C,OACEC,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAAQC,SAAUnB,KAAKC,MAAMkB,UAC3BJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQC,OAAQrB,KAAKZ,MAAMC,UACzB0B,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAQO,MAAK,oBAAsBpB,EAAtB,OAAgCqB,IAAOC,YAEpDV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KAEEX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,gBAEbZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYD,UAAU,WAAWE,MAAO1B,EAAI2B,cAC1Cf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAUC,KAAMT,IAAOU,SAAUX,MAAOC,IAAOC,YAC9CD,IAAOW,eAAiBpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,MAAiB,IAE5CrB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,YACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,6BACbZ,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAWC,KAAMnC,IACjBY,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACED,KAAMnC,EAAIqC,aAAJ,KAAwBjC,EAAxB,wBAMdQ,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEpC,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,KAAMA,EACNC,KAAMA,GAGNK,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAaC,UAAWvC,EAAOwC,YAAajC,MAIhDI,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEC,UAAWtB,IAAOsB,UAClBC,cAAevB,IAAOuB,uBA9EVC,IAAMC,WAwFnBC,EAAS,YAuCP/D,6IC5HAgE,oGAhBbrD,kBAAS,IAAAsD,EACkBpD,KAAKC,MAAtBoD,EADDD,EACCC,OAAQC,EADTF,EACSE,KAChB,OAAID,GAAUC,EAEVC,EAAAvC,EAAAC,cAAA,OACEU,UAAU,eACV6B,IAAKH,EACLI,IAAKH,EACLI,iBAAe,SAId,SAbmBV,IAAMC,mFCyB9BU,oGACJ7D,kBACE,IAlBiB6C,EAAWiB,EAkBtBC,GAlBWlB,EAkBY3C,KAAKC,MAAM0C,UAlBZiB,EAkBuB5D,KAAKC,MAAM2C,YAjBhED,EAAUmB,IAAI,SAAAC,GAAQ,MAAK,CACzBC,KAAMD,EAASE,KAAKC,OAAOC,KAC3BC,KAAML,EAASE,KAAKI,YAAYD,KAChCvC,MAAOkC,EAASE,KAAKI,YAAYxC,MACjCN,MAAOwC,EAASE,KAAKI,YAAY9C,MACjC+C,KAAMP,EAASE,KAAKI,YAAYC,KAChCC,OAAQC,IAAYC,UAClBb,EACAG,EAASE,KAAKI,YAAYE,OAC1BG,IAAWC,cAEbC,QAASb,EAASE,KAAKW,QACvBC,WAAYd,EAASE,KAAKY,eAO1B,OACEtB,EAAAvC,EAAAC,cAAA,WAEG4C,EAASC,IAAI,SAAAgB,GAAQ,IACZvD,EAAyDuD,EAAzDvD,MAAOyC,EAAkDc,EAAlDd,KAAMY,EAA4CE,EAA5CF,QAASL,EAAmCO,EAAnCP,OAAQH,EAA2BU,EAA3BV,KAAME,EAAqBQ,EAArBR,KAAMO,EAAeC,EAAfD,WAC5ClD,EAAYmD,EAAKC,WAAaD,EAAKC,WAAa,OAEtD,OACExB,EAAAvC,EAAAC,cAAC+D,EAAA,EAAD,CAAgBrD,UAAWA,EAAWsD,IAAK1D,GACzCgC,EAAAvC,EAAAC,cAACiE,EAAA,EAAD,KACE3B,EAAAvC,EAAAC,cAAA,MAAIU,UAAU,cACZ4B,EAAAvC,EAAAC,cAACkE,EAAA,KAAD,CAAMC,GAAIpB,GAAOzC,KAGrBgC,EAAAvC,EAAAC,cAAA,WAASU,UAAU,gBAEjB4B,EAAAvC,EAAAC,cAAA,SACG2D,EACA,IACDrB,EAAAvC,EAAAC,cAACkE,EAAA,KAAD,CAAMxD,UAAU,YAAYyD,GAAIpB,GAAhC,OAKJT,EAAAvC,EAAAC,cAAA,UAAQU,UAAU,aAChB4B,EAAAvC,EAAAC,cAACoE,EAAD,CAAiBhC,OAAQkB,EAAOe,MAAOhC,KAAMiB,EAAOjB,OACpDC,EAAAvC,EAAAC,cAACsE,EAAA,EAAD,CAAYC,IAAG,WAAajB,EAAOkB,IAAOnC,KAAMiB,EAAOjB,OACvDC,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,CAAUC,OAAO,OAAOvB,KAAMA,IAC9Bb,EAAAvC,EAAAC,cAAA,QAAM2E,MAAO,CAACC,YAAa,EAAGC,aAAc,EAAGC,SAAU,KAAzD,KACAxC,EAAAvC,EAAAC,cAAC+E,EAAA,EAAD,CAAU1B,KAAMA,IAChBf,EAAAvC,EAAAC,cAAA,QAAM2E,MAAO,CAACC,YAAa,EAAGC,aAAc,EAAGC,SAAU,KAAzD,KACAxC,EAAAvC,EAAAC,cAAA,QAAM2E,MAAO,CAACG,SAAU,KAClBlB,EADN,sBAnCU7B,IAAMC,YA+CjBU,8FCvETsC,oGACJnG,kBAAS,IACCoG,EAAalG,KAAKC,MAAlBiG,SAEFC,EAAUC,IAAW,UAAWpG,KAAKC,MAAM0B,WAEjD,OACEZ,EAAAC,EAAAC,cAAA,QAAMoF,GAAG,UAAU1E,UAAWwE,EAASG,KAAK,QACzCJ,OARiBlD,IAAMC,YAcjBgD,oHCdTM,oGACJzG,kBAAS,IAAAsD,EACyBpD,KAAKC,MAA7BiG,EADD9C,EACC8C,SAAUvE,EADXyB,EACWzB,UAEZwE,EAAUC,IAAW,WADR,CAAC,UAAW,YACoBzE,GAEnD,OAAOZ,EAAAC,EAAAC,cAAA,OAAKU,UAAWwE,GAAUD,OANflD,IAAMC,YAUbsD,0GCVTC,oGACJ1G,kBAAS,IAAAsD,EACsBpD,KAAKC,MAA1BgC,EADDmB,EACCnB,KAAMuD,EADPpC,EACOoC,IAAKjE,EADZ6B,EACY7B,MACnB,OAAIU,EAEAlB,EAAAC,EAAAC,cAACwF,EAAA,KAAD,CAAM9E,UAAU,YAAYyD,GAAII,GAAO,KAErCzE,EAAAC,EAAAC,cAAA,OAAKuC,IAAKvB,EAAMwB,IAAKlC,KAIpB,SAXY0B,cAeRuD,kGChBTE,oGACJ5G,kBAAS,IACCwC,EAAStC,KAAKC,MAAdqC,KACR,OAAIA,EACKvB,EAAAC,EAAAC,cAAA,MAAIU,UAAU,cAAcW,GAE9B,SANaU,IAAMC,YAUfyD,kGCVTC,oGACJ7G,kBAAS,IACCwC,EAAStC,KAAKC,MAAdqC,KACR,OAAIA,EACKvB,EAAAC,EAAAC,cAAA,MAAIU,UAAU,oBAAoBW,GAEpC,SANmBU,IAAMC,YAUrB0D,6LCiBAC,oGAzBb9G,kBACE,GAAIE,KAAKC,MAAMuF,IAAK,CAClB,IAAI7D,EAAY,WACZ3B,KAAKC,MAAM0B,YACbA,EAAeA,EAAN,IAAmB3B,KAAKC,MAAM0B,WAHvB,IAQPkF,EAROC,OAAAC,OAAA,GAQE/G,KAAKC,OAMzB,cALO4G,EAAKjB,aACLiB,EAAKlF,iBACLkF,EAAKvE,YACLuE,EAAKrB,IAGVjC,EAAAvC,EAAAC,cAACkE,EAAA,KAAD2B,OAAAC,OAAA,CAAM3B,GAAIpF,KAAKC,MAAMuF,KAASqB,EAA9B,CAAoClF,UAAWA,IAC5C3B,KAAKC,MAAMqC,MAIlB,OAAO,SAtBkBU,IAAMC,YC6BpB+D,oGA5BblH,kBAAS,IAAAsD,EAC6BpD,KAAKC,MAAjCI,EADD+C,EACC/C,KAAMC,EADP8C,EACO9C,MAAOG,EADd2C,EACc3C,KAAMC,EADpB0C,EACoB1C,KAC3B,OACE6C,EAAAvC,EAAAC,cAAA,OAAKU,UAAU,cACb4B,EAAAvC,EAAAC,cAACgG,EAAD,CACEtF,UAAU,cACV6D,IAAK/E,EACL6B,KAAK,kBAEPiB,EAAAvC,EAAAC,cAAA,QAAMU,UAAU,eAAhB,OAEG,IACAtB,EACA,IAJH,KAMG,IACAC,GAEHiD,EAAAvC,EAAAC,cAACgG,EAAD,CACEtF,UAAU,cACV6D,IAAK9E,EACL4B,KAAK,uBAtBUU,IAAMC,YCCzBiE,oGACJpH,kBAAS,IAAAsD,EACuCpD,KAAKC,MAA3CI,EADD+C,EACC/C,KAAMC,EADP8C,EACO9C,MAAOG,EADd2C,EACc3C,KAAMC,EADpB0C,EACoB1C,KAAMwF,EAD1B9C,EAC0B8C,SAC7BvE,EAAY,GAIhB,OAHItB,EAAO,IACTsB,GAAS,UAGT4B,EAAAvC,EAAAC,cAACgF,EAAA,EAAD,CAAatE,UAAWA,GAEtB4B,EAAAvC,EAAAC,cAAA,OAAKU,UAAU,0BACb4B,EAAAvC,EAAAC,cAACkG,EAAD,CAAY9G,KAAMA,EAAMC,MAAOA,EAAOG,KAAMA,EAAMC,KAAMA,KAGzDwF,EAGD3C,EAAAvC,EAAAC,cAACkG,EAAD,CAAY9G,KAAMA,EAAMC,MAAOA,EAAOG,KAAMA,EAAMC,KAAMA,SAjBjCsC,IAAMC,YAuBtBiE","file":"component---src-templates-tag-jsx-2e13530b23a33c105f63.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\nimport Drawer from \"../components/Drawer/Drawer\";\nimport Navigation from \"../components/Nav/Nav\";\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\nimport MainHeader from \"../components/MainHeader/MainHeader\";\nimport MainNav from \"../components/MainNav/MainNav\";\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\nimport PageTitle from \"../components/PageTitle/PageTitle\";\nimport PageDescription from \"../components/PageDescription/PageDescription\";\nimport Footer from \"../components/Footer/Footer\";\nimport PaginatedContent from \"../components/PaginatedContent/PaginatedContent\";\nimport Layout from \"../components/layout\";\n\nclass TagTemplate extends React.Component {\n  state = {\n    menuOpen: false\n  };\n\n  handleOnClick = evt => {\n    evt.stopPropagation();\n    if (this.state.menuOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n  };\n\n  handleOnClose = evt => {\n    evt.stopPropagation();\n    this.closeMenu();\n  };\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    const {\n      tag,\n      nodes,\n      page,\n      pages,\n      total,\n      limit,\n      prev,\n      next\n    } = this.props.pageContext;\n    const authorsEdges = this.props.data.authors.edges;\n    return (\n      <Layout location={this.props.location}>\n        <Drawer isOpen={this.state.menuOpen}>\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\n\n          <SiteWrapper>\n            {/* All the main content gets inserted here */}\n            <div className=\"tag-template\">\n              {/* The big featured header */}\n              <MainHeader className=\"tag-head\" cover={tag.featureImage}>\n                <MainNav>\n                  <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\n                  {config.siteNavigation ? <Navigation /> : '' }\n                </MainNav>\n                <div className=\"vertical\">\n                  <div className=\"main-header-content inner\">\n                    <PageTitle text={tag} />\n                    <PageDescription\n                      text={tag.description || `A ${total}-post collection`}\n                    />\n                  </div>\n                </div>\n              </MainHeader>\n\n              <PaginatedContent\n                page={page}\n                pages={pages}\n                total={total}\n                limit={limit}\n                prev={prev}\n                next={next}\n              >\n                {/* PostListing component renders all the posts */}\n                <PostListing postEdges={nodes} postAuthors={authorsEdges} />\n              </PaginatedContent>\n            </div>\n            {/* The tiny footer at the very bottom */}\n            <Footer\n              copyright={config.copyright}\n              promoteGatsby={config.promoteGatsby}\n            />\n          </SiteWrapper>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n    # authors\n    authors: allAuthorsJson {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n        }\n      }\n    }\n  }\n`;\n\nexport default TagTemplate;\n","import React from \"react\";\nimport \"./AuthorThumbnail.css\";\n\nclass AuthorThumbnail extends React.Component {\n  render() {\n    const { avatar, name } = this.props;\n    if (avatar && name) {\n      return (\n        <img\n          className=\"author-thumb\"\n          src={avatar}\n          alt={name}\n          data-pin-nopin=\"true\"\n        />\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorThumbnail;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport AuthorThumbnail from \"../AuthorThumbnail/AuthorThumbnail\";\nimport PostTags from \"../PostTags/PostTags\";\nimport SiteConfig from \"../../../data/SiteConfig\";\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\nimport PostFormatting from \"../PostFormatting/PostFormatting\";\nimport PostHeader from \"../PostHeader/PostHeader\";\nimport PostDate from \"../PostDate/PostDate\";\nimport AuthorModel from \"../../models/author-model\";\nimport \"./PostListing.css\";\n\nconst getPostList = (postEdges, authorEdges) =>\n  postEdges.map(postEdge => ({\n    path: postEdge.node.fields.slug,\n    tags: postEdge.node.frontmatter.tags,\n    cover: postEdge.node.frontmatter.cover,\n    title: postEdge.node.frontmatter.title,\n    date: postEdge.node.frontmatter.date,\n    author: AuthorModel.getAuthor(\n      authorEdges,\n      postEdge.node.frontmatter.author,\n      SiteConfig.blogAuthorId\n    ),\n    excerpt: postEdge.node.excerpt,\n    timeToRead: postEdge.node.timeToRead\n  }));\n\nclass PostListing extends React.Component {\n  render() {\n    const postList = getPostList(this.props.postEdges, this.props.postAuthors);\n\n    return (\n      <div>\n        {/* This is the post loop - each post will be output using this markup */}\n        {postList.map(post => {\n          const { title, path, excerpt, author, tags, date, timeToRead } = post;\n          const className = post.post_class ? post.post_class : \"post\";\n\n          return (\n            <PostFormatting className={className} key={title}>\n              <PostHeader>\n                <h2 className=\"post-title\">\n                  <Link to={path}>{title}</Link>\n                </h2>\n              </PostHeader>\n              <section className=\"post-excerpt\">\n                {/* TODO limit excerpt to 26 words */}\n                <p>\n                  {excerpt}\n                  {\" \"}\n                  <Link className=\"read-more\" to={path}>\n                    &raquo;\n                  </Link>\n                </p>\n              </section>\n              <footer className=\"post-meta\">\n                <AuthorThumbnail avatar={author.image} name={author.name} />\n                <AuthorLink url={`/author/${author.uid}`} name={author.name} />\n                <PostTags prefix=\" on \" tags={tags} />\n                <span style={{paddingLeft: 6, paddingRight: 6, fontSize: 13}}>•</span>\n                <PostDate date={date} />\n                <span style={{paddingLeft: 6, paddingRight: 6, fontSize: 13}}>•</span>\n                <span style={{fontSize: 13}}>\n                  {`${timeToRead } min read`}\n                </span>\n              </footer>\n            </PostFormatting>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainContent.css\";\n\nclass MainContent extends React.Component {\n  render() {\n    const { children } = this.props;\n\n    const classes = classNames(\"content\", this.props.className);\n\n    return (\n      <main id=\"content\" className={classes} role=\"main\">\n        {children}\n      </main>\n    );\n  }\n}\n\nexport default MainContent;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainNav.css\";\n\nclass MainNav extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const formatting = [\"overlay\", \"clearfix\"];\n    const classes = classNames(\"main-nav\", formatting, className);\n\n    return <nav className={classes}>{children}</nav>;\n  }\n}\n\nexport default MainNav;\n","import React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./BlogLogo.css\";\n\nclass BlogLogo extends Component {\n  render() {\n    const { logo, url, title } = this.props;\n    if (logo) {\n      return (\n        <Link className=\"blog-logo\" to={url || \"/\"}>\n          {/* style={{ boxShadow: \"none\" }}> */}\n          <img src={logo} alt={title} />\n        </Link>\n      );\n    }\n    return null;\n  }\n}\n\nexport default BlogLogo;\n","import React from \"react\";\nimport \"./PageTitle.css\";\n\nclass PageTitle extends React.Component {\n  render() {\n    const { text } = this.props;\n    if (text) {\n      return <h1 className=\"page-title\">{text}</h1>;\n    }\n    return null;\n  }\n}\n\nexport default PageTitle;\n","import React from \"react\";\nimport \"./PageDescription.css\";\n\nclass PageDescription extends React.Component {\n  render() {\n    const { text } = this.props;\n    if (text) {\n      return <h2 className=\"page-description\">{text}</h2>;\n    }\n    return null;\n  }\n}\n\nexport default PageDescription;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./PaginationLink.css\";\n\nclass PaginationLink extends React.Component {\n  render() {\n    if (this.props.url) {\n      let className = \"nav-link\";\n      if (this.props.className) {\n        className = `${className} ${this.props.className}`;\n      }\n\n      // Clone this.props and then delete Component specific\n      // props so we can spread the rest into the img.\n      const { ...rest } = this.props;\n      delete rest.style;\n      delete rest.className;\n      delete rest.text;\n      delete rest.url;\n\n      return (\n        <Link to={this.props.url} {...rest} className={className}>\n          {this.props.text}\n        </Link>\n      );\n    }\n    return null;\n  }\n}\n\nexport default PaginationLink;\n","import React from \"react\";\nimport PaginationLink from \"../PaginationLink/PaginationLink\";\nimport \"./Pagination.css\";\n\nclass Pagination extends React.Component {\n  render() {\n    const { page, pages, prev, next } = this.props;\n    return (\n      <nav className=\"pagination\">\n        <PaginationLink\n          className=\"newer-posts\"\n          url={prev}\n          text=\"← Newer Posts\"\n        />\n        <span className=\"page-number\">\n          Page \n          {' '}\n          {page}\n          {' '}\nof\n          {' '}\n          {pages}\n        </span>\n        <PaginationLink\n          className=\"older-posts\"\n          url={next}\n          text=\"Older Posts →\"\n        />\n      </nav>\n    );\n  }\n}\n\nexport default Pagination;\n","import React from \"react\";\nimport MainContent from \"../MainContent/MainContent\";\nimport Pagination from \"../Pagination/Pagination\";\nimport \"./PaginatedContent.css\";\n\nclass PaginatedContent extends React.Component {\n  render() {\n    const { page, pages, prev, next, children } = this.props;\n    let className = \"\";\n    if (page > 1) {\n      className = `${className} paged`;\n    }\n    return (\n      <MainContent className={className}>\n        {/* Previous/next page links - only displayed on page 2+ */}\n        <div className=\"extra-pagination inner\">\n          <Pagination page={page} pages={pages} prev={prev} next={next} />\n        </div>\n\n        {children}\n\n        {/* Previous/next page links - displayed on every page */}\n        <Pagination page={page} pages={pages} prev={prev} next={next} />\n      </MainContent>\n    );\n  }\n}\n\nexport default PaginatedContent;\n"],"sourceRoot":""}